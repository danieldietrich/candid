const p=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerpolicy&&(r.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?r.credentials="include":o.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}};p();function call(e,...t){return typeof e=="function"?e.apply(e,t):void 0}function getBaseUrl(){const e=document.head.querySelector("base");return e?e.href:document.URL}function extractBaseUrl(e){return e.substring(0,e.lastIndexOf("/"))+"/"}function createUrl(e,t){return t.startsWith("http://")||t.startsWith("https://")?t:t.startsWith("/")?e.endsWith("/")?e+t.substring(1):e+t:e.endsWith("/")?e+t:e+"/"+t}function processWebComponents(baseUrl,element,componentProcessor){element.querySelectorAll("web-component").forEach(elem=>{try{const name=elem.getAttribute("name"),mode=elem.getAttribute("mode"),propsStr=elem.getAttribute("props"),props=propsStr?eval("("+propsStr+")"):{},template=elem.querySelector("template"),C=createClass(baseUrl,template,mode,props,componentProcessor);customElements.define(name,C)}catch(e){console.error("[candid] Error processing web component:",elem,e)}})}const __ctx=Symbol();function createClass(baseUrl,template,mode,props,componentProcessor){let processor,script;async function initialize(){if(template){processor||(processor=componentProcessor(baseUrl,template.content)),await processor,script||(script=[...template.content.querySelectorAll("script")].map(e=>e.parentNode.removeChild(e).textContent).join(`;
`));const root=mode==="open"||mode==="closed"?this.attachShadow({mode}):this;root.appendChild(template.content.cloneNode(!0));const ctx={element:this,root};Object.defineProperty(this,__ctx,{value:ctx}),function(){eval(script)}.bind(ctx)(),this.addEventListener("slotchange",ctx.onSlotChange),this.connectedCallback(),Object.entries(props).forEach(([e,t])=>this.attributeChangedCallback(e,null,t))}}class C extends HTMLElement{constructor(){super();Object.entries(props).forEach(([t,n])=>{let s=n;this.hasOwnProperty(t)&&(s=this[t],delete this[t]),createProperty(this,t,n),this.hasAttribute(t)||(this[t]=s)}),initialize.bind(this)()}static get observedAttributes(){return Object.keys(props)}connectedCallback(){var t;call((t=this[__ctx])==null?void 0:t.onMount)}disconnectedCallback(){var t;call((t=this[__ctx])==null?void 0:t.onUnmount)}attributeChangedCallback(t,n,s){var o;call((o=this[__ctx])==null?void 0:o.onUpdate,t,n,s)}adoptedCallback(){var t;call((t=this[__ctx])==null?void 0:t.onAdopt)}}return C}function createProperty(e,t,n){Object.defineProperty(e,t,typeof n=="boolean"?{get:()=>e.hasAttribute(t),set:o=>o?e.setAttribute(t,""):e.removeAttribute(t),enumerable:!0}:{get:()=>e.getAttribute(t),set:o=>o==null?e.removeAttribute(t):e.setAttribute(t,o),enumerable:!0})}async function processWebImports(e,t,n){const s=t.querySelectorAll("web-import");await Promise.allSettled([...s].map(async o=>{if(!o.getAttribute("status")){o.setAttribute("status","loading");try{const r=o.getAttribute("src"),c=createUrl(e,r),i=await fetch(c);if(i.ok){const l=await i.text(),a=document.createRange().createContextualFragment(l),u=extractBaseUrl(c);await n(u,a),o.parentNode.replaceChild(a,o)}else logError(o,`${i.status} ${i.statusText}`)}catch(r){logError(o,r)}}}))}function logError(e,t){console.error("[candid] web import error",e,t),e.setAttribute("status","error"),e.setAttribute("message",JSON.stringify(t))}async function candid(e){const{elementProcessor:t}=Object.assign({},e),n=async(s,o)=>{call(t,o),processWebComponents(s,o,n),await processWebImports(s,o,n)};await n(getBaseUrl(),document)}window.addEventListener("load",()=>candid());
